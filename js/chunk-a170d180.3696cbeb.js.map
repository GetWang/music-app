{"version":3,"sources":["webpack:///./src/api/recommend.js"],"names":["getRecommend","_Users_wang_W_Projects_Projects_of_Action_vue_music_app_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_0___default","a","resolve","topBannerData","getDiscList","discListData","getDiscDetail","disstid","discDetailData"],"mappings":"+QAOO,SAASA,IACd,OAAOC,EAAAC,EAAQC,QAAQC,GA2ClB,SAASC,IACd,OAAOJ,EAAAC,EAAQC,QAAQG,GA0BlB,SAASC,EAAeC,GAC7B,OAAOP,EAAAC,EAAQC,QAAQM","file":"js/chunk-a170d180.3696cbeb.js","sourcesContent":["// import { commonParams } from 'api/config'\n// import axios from 'axios'\nimport topBannerData from 'api/topBannerData.json'\nimport discListData from 'api/discListData.json'\nimport discDetailData from 'api/discDetailData.json'\n\n/* 抓取轮播图数据 */\nexport function getRecommend () {\n  return Promise.resolve(topBannerData)\n  // const url = '/api/getTopBanner'\n\n  // const data = Object.assign({}, commonParams, {\n  //   platform: 'yqq.json',\n  //   hostUin: 0,\n  //   needNewCode: 0,\n  //   inCharset: 'utf8',\n  //   format: 'json',\n  //   '-': 'recom' + (Math.random() + '').replace('0.', ''),\n  //   data: {\n  //     'comm': { 'ct': 24 },\n  //     'category': { 'method': 'get_hot_category', 'param': { 'qq': '' }, 'module': 'music.web_category_svr' },\n  //     'recomPlaylist': {\n  //       'method': 'get_hot_recommend',\n  //       'param': { 'async': 1, 'cmd': 2 },\n  //       'module': 'playlist.HotRecommendServer'\n  //     },\n  //     'playlist': {\n  //       'method': 'get_playlist_by_category',\n  //       'param': { 'id': 8, 'curPage': 1, 'size': 40, 'order': 5, 'titleid': 8 },\n  //       'module': 'playlist.PlayListPlazaServer'\n  //     },\n  //     'new_song': { 'module': 'newsong.NewSongServer', 'method': 'get_new_song_info', 'param': { 'type': 5 } },\n  //     'new_album': {\n  //       'module': 'newalbum.NewAlbumServer',\n  //       'method': 'get_new_album_info',\n  //       'param': { 'area': 1, 'sin': 0, 'num': 10 }\n  //     },\n  //     'new_album_tag': { 'module': 'newalbum.NewAlbumServer', 'method': 'get_new_album_area', 'param': {} },\n  //     'toplist': { 'module': 'musicToplist.ToplistInfoServer', 'method': 'GetAll', 'param': {} },\n  //     'focus': { 'module': 'QQMusic.MusichallServer', 'method': 'GetFocus', 'param': {} }\n  //   }\n  // })\n\n  // return axios.get(url, {\n  //   params: data\n  // }).then((res) => {\n  //   return res.data\n  // })\n}\n\n/* 抓取歌单列表数据 */\nexport function getDiscList () {\n  return Promise.resolve(discListData)\n  // // 该接口已事先在本地服务器配置好\n  // const url = '/api/getDiscList'\n  // const data = Object.assign({}, commonParams, {\n  //   platform: 'yqq',\n  //   hostUin: 0,\n  //   sin: 0,\n  //   ein: 29,\n  //   sortId: 5,\n  //   needNewCode: 0,\n  //   categoryId: 10000000,\n  //   // rnd为随机数\n  //   rnd: Math.random(),\n  //   format: 'json'\n  // })\n  // // 通过axios向本地服务器发送Ajax请求，请求歌单数据\n  // return axios.get(url, {\n  //   params: data\n  // }).then((res) => {\n  //   // res是一个带有HTTP响应头部数据和实际请求的歌单数据的对象\n  //   // res.data是一个实际请求的歌单数据的对象\n  //   return Promise.resolve(res.data)\n  // })\n}\n\n/* 抓取歌单详情数据 */\nexport function getDiscDetail (disstid) {\n  return Promise.resolve(discDetailData)\n  // const url = '/api/getDiscDetail'\n  // const data = Object.assign({}, commonParams, {\n  //   disstid,\n  //   type: 1,\n  //   json: 1,\n  //   utf8: 1,\n  //   onlysong: 0,\n  //   hostUin: 0,\n  //   platform: 'yqq',\n  //   needNewCode: 0\n  // })\n  // return axios.get(url, {\n  //   params: data\n  // }).then((res) => {\n  //   return Promise.resolve(res.data)\n  // })\n}\n"],"sourceRoot":""}